% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mysql.R
\name{mysql}
\alias{mysql}
\alias{mysql_connect}
\alias{mysql_read}
\alias{mysql_exists}
\alias{mysql_write}
\alias{mysql_close}
\alias{mysql_disconnect}
\title{Work with MySQL databases}
\usage{
mysql_connect(
  database,
  use_x1 = FALSE,
  default_file = NULL,
  hostname = NULL,
  port = NULL
)

mysql_read(query, database = NULL, use_x1 = NULL, con = NULL)

mysql_exists(database, table_name, use_x1 = NULL, con = NULL)

mysql_write(x, database, table_name, use_x1 = NULL, con = NULL, ...)

mysql_close(con)

mysql_disconnect(con)
}
\arguments{
\item{database}{name of the database to query; \emph{optional} if passing a \code{con}}

\item{use_x1}{logical flag; use if querying an extension-related table that
is hosted on x1 (e.g. \verb{echo_*} tables); default \code{FALSE}}

\item{default_file}{name of a config file containing username and password
to use when connecting}

\item{hostname}{name of the machine to connect to, which depends on whether
\code{query} is used to fetch from the \strong{log} \code{database} (in which case
connect to "db1108.eqiad.wmnet") or a MediaWiki ("content") DB, in which
case \code{\link[=connection_details]{connection_details()}} is used to return the appropriate shard host
name and port based on the stored mapping (use \code{\link[=update_shardmap]{update_shardmap()}} prior
to make sure the latest mapping is used)}

\item{query}{SQL query}

\item{con}{MySQL connection returned by \code{\link[=mysql_connect]{mysql_connect()}}; \emph{optional} -- if
not provided, a temporary connection will be opened up}

\item{table_name}{name of a table to check for the existence of or create,
depending on the function}

\item{x}{a \code{data.frame} to write}

\item{...}{additional arguments to pass to \code{dbWriteTable}}
}
\description{
Read from, write to, and check data from the MySQL databases and
tables in the Wikimedia cluster. Assumes the presence of a validly
formatted configuration file.
}
\examples{
\dontrun{
# Connection details (which shard to connect to) are fetched automatically:
mysql_read("SELECT * FROM image LIMIT 100", "commonswiki")
mysql_read("SELECT * FROM wbc_entity_usage LIMIT 100", "wikidatawiki")

# Echo extension tables are on the x1 host:
mysql_read("SELECT *
  FROM echo_event
  LEFT JOIN echo_notification
    ON echo_event.event_id = echo_notification.notification_event
  LIMIT 10;",
"enwiki", use_x1 = TRUE)

# If querying multiple databases in the same shard
# a shared connection may be used:
con <- mysql_connect("frwiki")
results <- purrr::map(
  c("frwiki", "jawiki"),
  mysql_read,
  query = "SELECT...",
  con = con
)
mysql_disconnect(con)
}
}
\seealso{
\code{\link[=query_hive]{query_hive()}} or \code{\link[=global_query]{global_query()}}
}
